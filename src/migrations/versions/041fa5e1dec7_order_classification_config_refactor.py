"""order classification config refactor

Revision ID: 041fa5e1dec7
Revises: 76e015da4366
Create Date: 2024-12-13 01:07:08.520481

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '041fa5e1dec7'
down_revision: Union[str, None] = '76e015da4366'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'order_classification_config',
        sa.Column(
            'rules_by_classes',
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
    )
    op.add_column(
        'order_classification_config',
        sa.Column(
            'is_use_order_classification',
            sa.Boolean(),
            nullable=True,
        ),
    )
    op.alter_column(
        'order_classification_config',
        'is_use_order_updating',
        existing_type=sa.BOOLEAN(),
        nullable=True,
    )
    op.drop_column(
        'order_classification_config',
        'emergency_prompt',
    )
    op.drop_column(
        'order_classification_config',
        'is_use_emergency_classification',
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'order_classification_config',
        sa.Column(
            'is_use_emergency_classification',
            sa.BOOLEAN(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        'order_classification_config',
        sa.Column(
            'emergency_prompt',
            sa.VARCHAR(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.alter_column(
        'order_classification_config',
        'is_use_order_updating',
        existing_type=sa.BOOLEAN(),
        nullable=False,
    )
    op.drop_column(
        'order_classification_config',
        'is_use_order_classification',
    )
    op.drop_column(
        'order_classification_config',
        'rules_by_classes',
    )
    # ### end Alembic commands ###
