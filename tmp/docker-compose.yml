version: "3"

services:
  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    command: bash -c "
      cd /app/src
      && python -m alembic upgrade head
      && python3 /app/src/app.py"
    ports:
      - "8090:8080"
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
      # Just to see .env in files viewer
      - ./.env:${DATA_FOLDER_PATH}/env-file
      - backend:${DATA_FOLDER_PATH}

  faststream:
    image: datastep_backend
    restart: always
    command: bash -c "
      cd /app/src
      && faststream run --reload --host kafka:app"
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
      - backend:${DATA_FOLDER_PATH}
    depends_on:
      - backend

  redis-server:
    image: redis/redis-stack-server
    restart: always
    command: bash -c "redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}"
    ports:
      - "6389:6379"
    volumes:
      - redis-server:${DATA_FOLDER_PATH}

  rq-worker:
    image: datastep_backend
    restart: always
    command: rq worker --path /app/src --url redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT} mapping_nomenclatures sync_nomenclatures retrain_classifier classification documents
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
      - backend:${DATA_FOLDER_PATH}
    depends_on:
      - backend
      - redis-server
  kafka:
    image: bitnami/kafka:3.5.0
    restart: always
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"

volumes:
  backend:
  redis-server:
